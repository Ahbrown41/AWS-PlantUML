[AWSPUML]
debug: False
sprite.force_regen: False
sprite.size: 16
sprite.shift: 0
sprite.shift_ignore: 0

[AWSPUML.colors]
orange:             #F58536
light-orange:       #FEEDE2
goldenrod:          #D9A842
light-goldenrod:    #F7EDD8
blue:               #2F74B8
light-blue:         #AECCEA
green:              #769D3F
light-green:        #CBDFAF
purple:             #AD698C
light-purple:       #EDDEE6
grey:               #7E7D7D
light-grey:         #D6D6D6
red:                #E05344
light-red:          #F9DFDC

[AI]
color: ${AWSPUML.colors:blue}
entity_type: component

[AI.AmazonLex]

[AI.AmazonLex.AmazonLex]

[AI.AmazonLex.AmazonLex_LARGE]

[AI.AmazonMachineLearning]

[AI.AmazonMachineLearning.AmazonMachineLearning]

[AI.AmazonMachineLearning.AmazonMachineLearning_LARGE]

[AI.AmazonPolly]

[AI.AmazonPolly.AmazonPolly]

[AI.AmazonPolly.AmazonPolly_LARGE]

[AI.AmazonRekognition]

[AI.AmazonRekognition.AmazonRekognition]

[AI.AmazonRekognition.AmazonRekognition_LARGE]

[Analytics]
color: ${AWSPUML.colors:orange}
entity_type: node

[Analytics.AWSDataPipeline]

[Analytics.AWSDataPipeline.AWSDataPipeline]

[Analytics.AWSDataPipeline.AWSDataPipeline_LARGE]

[Analytics.AmazonAthena]

[Analytics.AmazonAthena.AmazonAthena]

[Analytics.AmazonAthena.AmazonAthena_LARGE]

[Analytics.AmazonCloudSearch]

[Analytics.AmazonCloudSearch.AmazonCloudSearch]

[Analytics.AmazonCloudSearch.AmazonCloudSearch_LARGE]

[Analytics.AmazonCloudSearch.searchdocuments]
entity_type: artifact

[Analytics.AmazonCloudSearch.searchdocuments.searchdocuments]

[Analytics.AmazonCloudSearch.searchdocuments.searchdocuments_LARGE]

[Analytics.AmazonEMR]
entity_type: component

[Analytics.AmazonEMR.AmazonEMR]

[Analytics.AmazonEMR.AmazonEMR_LARGE]

[Analytics.AmazonEMR.EMRengine]

[Analytics.AmazonEMR.EMRengine.EMRengine]

[Analytics.AmazonEMR.EMRengine.EMRengine_LARGE]

[Analytics.AmazonEMR.EMRengineMapRM3]

[Analytics.AmazonEMR.EMRengineMapRM3.EMRengineMapRM3]

[Analytics.AmazonEMR.EMRengineMapRM3.EMRengineMapRM3_LARGE]

[Analytics.AmazonEMR.EMRengineMapRM5]

[Analytics.AmazonEMR.EMRengineMapRM5.EMRengineMapRM5]

[Analytics.AmazonEMR.EMRengineMapRM5.EMRengineMapRM5_LARGE]

[Analytics.AmazonEMR.EMRengineMapRM7]

[Analytics.AmazonEMR.EMRengineMapRM7.EMRengineMapRM7]

[Analytics.AmazonEMR.EMRengineMapRM7.EMRengineMapRM7_LARGE]

[Analytics.AmazonEMR.cluster]
entity_type: cloud
skinparam: BackgroundColor ${AWSPUML.colors:light-orange}
           BorderColor ${AWSPUML.colors:orange}

[Analytics.AmazonEMR.cluster.cluster]

[Analytics.AmazonEMR.cluster.cluster_LARGE]

[Analytics.AmazonEMR_HDFScluster]
entity_type: cloud
skinparam: BackgroundColor ${AWSPUML.colors:light-orange}
           BorderColor ${AWSPUML.colors:orange}

[Analytics.AmazonEMR_HDFScluster.AmazonEMR_HDFScluster]

[Analytics.AmazonEMR_HDFScluster.AmazonEMR_HDFScluster_LARGE]

[Analytics.AmazonES]

[Analytics.AmazonES.AmazonES]

[Analytics.AmazonES.AmazonES_LARGE]

[Analytics.AmazonKinesis]
entity_type: component

[Analytics.AmazonKinesis.AmazonKinesis]

[Analytics.AmazonKinesis.AmazonKinesisAnalytics]

[Analytics.AmazonKinesis.AmazonKinesisAnalytics.AmazonKinesisAnalytics]

[Analytics.AmazonKinesis.AmazonKinesisAnalytics.AmazonKinesisAnalytics_LARGE]

[Analytics.AmazonKinesis.AmazonKinesisFirehose]

[Analytics.AmazonKinesis.AmazonKinesisFirehose.AmazonKinesisFirehose]

[Analytics.AmazonKinesis.AmazonKinesisFirehose.AmazonKinesisFirehose_LARGE]

[Analytics.AmazonKinesis.AmazonKinesisStreams]

[Analytics.AmazonKinesis.AmazonKinesisStreams.AmazonKinesisStreams]

[Analytics.AmazonKinesis.AmazonKinesisStreams.AmazonKinesisStreams_LARGE]

[Analytics.AmazonKinesis.AmazonKinesis_LARGE]

[Analytics.AmazonKinesis.AmazonKinesis_enabledapp]

[Analytics.AmazonKinesis.AmazonKinesis_enabledapp.AmazonKinesis_enabledapp]

[Analytics.AmazonKinesis.AmazonKinesis_enabledapp.AmazonKinesis_enabledapp_LARGE]

[Analytics.AmazonQuickSight]

[Analytics.AmazonQuickSight.AmazonQuickSight]

[Analytics.AmazonQuickSight.AmazonQuickSight_LARGE]

[Analytics.AmazonRedshift]

[Analytics.AmazonRedshift.AmazonRedshift]

[Analytics.AmazonRedshift.AmazonRedshift_LARGE]

[Analytics.AmazonRedshift.densecomputenode]

[Analytics.AmazonRedshift.densecomputenode.densecomputenode]

[Analytics.AmazonRedshift.densecomputenode.densecomputenode_LARGE]

[Analytics.AmazonRedshift.densestoragenode]

[Analytics.AmazonRedshift.densestoragenode.densestoragenode]

[Analytics.AmazonRedshift.densestoragenode.densestoragenode_LARGE]

[ApplicationServices]
color: ${AWSPUML.colors:goldenrod}
entity_type: component

[ApplicationServices.AWSStepFunctions]

[ApplicationServices.AWSStepFunctions.AWSStepFunctions]

[ApplicationServices.AWSStepFunctions.AWSStepFunctions_LARGE]

[ApplicationServices.AmazonAPIGateway]

[ApplicationServices.AmazonAPIGateway.AmazonAPIGateway]

[ApplicationServices.AmazonAPIGateway.AmazonAPIGateway_LARGE]

[ApplicationServices.AmazonAppStream]

[ApplicationServices.AmazonAppStream.AmazonAppStream]

[ApplicationServices.AmazonAppStream.AmazonAppStream_LARGE]

[ApplicationServices.AmazonElasticTranscoder]

[ApplicationServices.AmazonElasticTranscoder.AmazonElasticTranscoder]

[ApplicationServices.AmazonElasticTranscoder.AmazonElasticTranscoder_LARGE]

[ApplicationServices.AmazonSWF]
entity_type: agent

[ApplicationServices.AmazonSWF.AmazonSWF]
entity_type: node

[ApplicationServices.AmazonSWF.AmazonSWF_LARGE]
entity_type: node

[ApplicationServices.AmazonSWF.decider]

[ApplicationServices.AmazonSWF.decider.decider]

[ApplicationServices.AmazonSWF.decider.decider_LARGE]

[ApplicationServices.AmazonSWF.worker]

[ApplicationServices.AmazonSWF.worker.worker]

[ApplicationServices.AmazonSWF.worker.worker_LARGE]

[BusinessProductivity]
color: ${AWSPUML.colors:orange}
entity_type: frame

[BusinessProductivity.AmazonWorkDocs]

[BusinessProductivity.AmazonWorkDocs.AmazonWorkDocs]

[BusinessProductivity.AmazonWorkDocs.AmazonWorkDocs_LARGE]

[BusinessProductivity.AmazonWorkMail]

[BusinessProductivity.AmazonWorkMail.AmazonWorkMail]

[BusinessProductivity.AmazonWorkMail.AmazonWorkMail_LARGE]

[Compute]
color: ${AWSPUML.colors:orange}
entity_type: node

[Compute.AWSBatch]

[Compute.AWSBatch.AWSBatch]

[Compute.AWSBatch.AWSBatch_LARGE]

[Compute.AWSElasticBeanstalk]

[Compute.AWSElasticBeanstalk.AWSElasticBeanstalk]

[Compute.AWSElasticBeanstalk.AWSElasticBeanstalk_LARGE]

[Compute.AWSElasticBeanstalk.application]
entity_type: component

[Compute.AWSElasticBeanstalk.application.application]

[Compute.AWSElasticBeanstalk.application.application_LARGE]

[Compute.AWSElasticBeanstalk.deployment]
entity_type: frame

[Compute.AWSElasticBeanstalk.deployment.deployment]

[Compute.AWSElasticBeanstalk.deployment.deployment_LARGE]

[Compute.AWSLambda]
skinparam: BackgroundColor White
           BorderColor Black

[Compute.AWSLambda.AWSLambda]

[Compute.AWSLambda.AWSLambda_LARGE]

[Compute.AWSLambda.LambdaFunction]

[Compute.AWSLambda.LambdaFunction.LambdaFunction]

[Compute.AWSLambda.LambdaFunction.LambdaFunction_LARGE]

[Compute.AmazonEC2]
entity_type: component

[Compute.AmazonEC2.AMI]
entity_type: artifact

[Compute.AmazonEC2.AMI.AMI]

[Compute.AmazonEC2.AMI.AMI_LARGE]

[Compute.AmazonEC2.AmazonEC2]

[Compute.AmazonEC2.AmazonEC2_LARGE]

[Compute.AmazonEC2.AutoScaling]
entity_type: frame

[Compute.AmazonEC2.AutoScaling.AutoScaling]

[Compute.AmazonEC2.AutoScaling.AutoScaling_LARGE]

[Compute.AmazonEC2.DBoninstance]
entity_type: storage

[Compute.AmazonEC2.DBoninstance.DBoninstance]

[Compute.AmazonEC2.DBoninstance.DBoninstance_LARGE]

[Compute.AmazonEC2.ElasticIPaddress]
entity_type: artifact

[Compute.AmazonEC2.ElasticIPaddress.ElasticIPaddress]

[Compute.AmazonEC2.ElasticIPaddress.ElasticIPaddress_LARGE]

[Compute.AmazonEC2.SpotFleet]

[Compute.AmazonEC2.SpotFleet.SpotFleet_LARGE]

[Compute.AmazonEC2.SpotInstance]

[Compute.AmazonEC2.SpotInstance.SpotInstance_LARGE]

[Compute.AmazonEC2.Spotfleet]
entity_type: frame

[Compute.AmazonEC2.Spotfleet.Spotfleet]

[Compute.AmazonEC2.Spotinstance]

[Compute.AmazonEC2.Spotinstance.Spotinstance]

[Compute.AmazonEC2.X1instance]

[Compute.AmazonEC2.X1instance.X1instance]

[Compute.AmazonEC2.X1instance.X1instance_LARGE]

[Compute.AmazonEC2.instance]

[Compute.AmazonEC2.instance.instance]

[Compute.AmazonEC2.instance.instance_LARGE]

[Compute.AmazonEC2.instances]
entity_type: frame

[Compute.AmazonEC2.instances.instances]

[Compute.AmazonEC2.instances.instances_LARGE]

[Compute.AmazonEC2.instancewithCloudWatch]

[Compute.AmazonEC2.instancewithCloudWatch.instancewithCloudWatch]

[Compute.AmazonEC2.instancewithCloudWatch.instancewithCloudWatch_LARGE]

[Compute.AmazonEC2.optimizedinstance]

[Compute.AmazonEC2.optimizedinstance.optimizedinstance]

[Compute.AmazonEC2.optimizedinstance.optimizedinstance_LARGE]

[Compute.AmazonECR]
entity_type: frame

[Compute.AmazonECR.AmazonECR]

[Compute.AmazonECR.AmazonECR_LARGE]

[Compute.AmazonECR.ECRRegistry]

[Compute.AmazonECR.ECRRegistry.ECRRegistry]

[Compute.AmazonECR.ECRRegistry.ECRRegistry_LARGE]

[Compute.AmazonECS]

[Compute.AmazonECS.AmazonECS]

[Compute.AmazonECS.AmazonECS_LARGE]

[Compute.AmazonECS.EC2ComputeContainer]

[Compute.AmazonECS.EC2ComputeContainer.EC2ComputeContainer]

[Compute.AmazonECS.EC2ComputeContainer.EC2ComputeContainer_LARGE]

[Compute.AmazonECS.EC2ComputeContainer_Alt1]

[Compute.AmazonECS.EC2ComputeContainer_Alt1.EC2ComputeContainer_Alt1]

[Compute.AmazonECS.EC2ComputeContainer_Alt1.EC2ComputeContainer_Alt1_LARGE]

[Compute.AmazonECS.EC2ComputeContainer_Alt2]

[Compute.AmazonECS.EC2ComputeContainer_Alt2.EC2ComputeContainer_Alt2]

[Compute.AmazonECS.EC2ComputeContainer_Alt2.EC2ComputeContainer_Alt2_LARGE]

[Compute.AmazonLightsail]

[Compute.AmazonLightsail.AmazonLightsail]

[Compute.AmazonLightsail.AmazonLightsail_LARGE]

[Compute.AmazonVPC]
entity_type: interface
skinparam: BackgroundColor ${AWSPUML.colors:light-orange}
           BorderColor ${AWSPUML.colors:orange}

[Compute.AmazonVPC.AmazonVPC]
entity_type: cloud

[Compute.AmazonVPC.AmazonVPC_LARGE]
entity_type: cloud

[Compute.AmazonVPC.Internetgateway]

[Compute.AmazonVPC.Internetgateway.Internetgateway]

[Compute.AmazonVPC.Internetgateway.Internetgateway_LARGE]

[Compute.AmazonVPC.VPCNATgateway]

[Compute.AmazonVPC.VPCNATgateway.VPCNATgateway]

[Compute.AmazonVPC.VPCNATgateway.VPCNATgateway_LARGE]

[Compute.AmazonVPC.VPCpeering]

[Compute.AmazonVPC.VPCpeering.VPCpeering]

[Compute.AmazonVPC.VPCpeering.VPCpeering_LARGE]

[Compute.AmazonVPC.VPNconnection]

[Compute.AmazonVPC.VPNconnection.VPNconnection]

[Compute.AmazonVPC.VPNconnection.VPNconnection_LARGE]

[Compute.AmazonVPC.VPNgateway]

[Compute.AmazonVPC.VPNgateway.VPNgateway]

[Compute.AmazonVPC.VPNgateway.VPNgateway_LARGE]

[Compute.AmazonVPC.customergateway]

[Compute.AmazonVPC.customergateway.customergateway]

[Compute.AmazonVPC.customergateway.customergateway_LARGE]

[Compute.AmazonVPC.elasticnetworkadapter]

[Compute.AmazonVPC.elasticnetworkadapter.elasticnetworkadapter]

[Compute.AmazonVPC.elasticnetworkadapter.elasticnetworkadapter_LARGE]

[Compute.AmazonVPC.elasticnetworkinterface]

[Compute.AmazonVPC.elasticnetworkinterface.elasticnetworkinterface]

[Compute.AmazonVPC.elasticnetworkinterface.elasticnetworkinterface_LARGE]

[Compute.AmazonVPC.endpoints]

[Compute.AmazonVPC.endpoints.endpoints]

[Compute.AmazonVPC.endpoints.endpoints_LARGE]

[Compute.AmazonVPC.flowlogs]
entity_type: artifact
skinparam: BackgroundColor White
           BorderColor Black

[Compute.AmazonVPC.flowlogs.flowlogs]

[Compute.AmazonVPC.flowlogs.flowlogs_LARGE]

[Compute.AmazonVPC.router]

[Compute.AmazonVPC.router.router]

[Compute.AmazonVPC.router.router_LARGE]

[Compute.ElasticLoadBalancing]

[Compute.ElasticLoadBalancing.ApplicationLoadBalancer]

[Compute.ElasticLoadBalancing.ApplicationLoadBalancer.ApplicationLoadBalancer]

[Compute.ElasticLoadBalancing.ApplicationLoadBalancing]

[Compute.ElasticLoadBalancing.ApplicationLoadBalancing.ApplicationLoadBalancing_LARGE]

[Compute.ElasticLoadBalancing.ClassicLoadbalancer]

[Compute.ElasticLoadBalancing.ClassicLoadbalancer.ClassicLoadbalancer]

[Compute.ElasticLoadBalancing.ClassicLoadbalancer.ClassicLoadbalancer_LARGE]

[Compute.ElasticLoadBalancing.ElasticLoadBalancing]

[Compute.ElasticLoadBalancing.ElasticLoadBalancing_LARGE]

[Database]
color: ${AWSPUML.colors:blue}
entity_type: database

[Database.AWSDMS]

[Database.AWSDMS.AWSDMS]
entity_type: node

[Database.AWSDMS.AWSDMS_LARGE]
entity_type: node

[Database.AWSDMS.databasemigrationworkflowjob]

[Database.AWSDMS.databasemigrationworkflowjob.databasemigrationworkflowjob]

[Database.AWSDMS.databasemigrationworkflowjob.databasemigrationworkflowjob_LARGE]

[Database.AmazonDynamoDB]
skinparam: BackgroundColor White
entity_type: artifact

[Database.AmazonDynamoDB.AmazonDynamoDB]
entity_type: node

[Database.AmazonDynamoDB.AmazonDynamoDB_LARGE]
entity_type: node

[Database.AmazonDynamoDB.attribute]

[Database.AmazonDynamoDB.attribute.attribute]

[Database.AmazonDynamoDB.attribute.attribute_LARGE]

[Database.AmazonDynamoDB.attributes]

[Database.AmazonDynamoDB.attributes.attributes]

[Database.AmazonDynamoDB.attributes.attributes_LARGE]

[Database.AmazonDynamoDB.globalsecondaryindex]

[Database.AmazonDynamoDB.globalsecondaryindex.globalsecondaryindex]

[Database.AmazonDynamoDB.globalsecondaryindex.globalsecondaryindex_LARGE]

[Database.AmazonDynamoDB.item]

[Database.AmazonDynamoDB.item.item]

[Database.AmazonDynamoDB.item.item_LARGE]

[Database.AmazonDynamoDB.items]

[Database.AmazonDynamoDB.items.items]

[Database.AmazonDynamoDB.items.items_LARGE]

[Database.AmazonDynamoDB.table]
entity_type: folder
skinparam: BackgroundColor ${AWSPUML.colors:light-blue}

[Database.AmazonDynamoDB.table.table]

[Database.AmazonDynamoDB.table.table_LARGE]

[Database.AmazonElasticCache]
entity_type: storage

[Database.AmazonElasticCache.AmazonElasticCache]

[Database.AmazonElasticCache.AmazonElasticCache_LARGE]

[Database.AmazonElasticCache.Memcached]

[Database.AmazonElasticCache.Memcached.Memcached]

[Database.AmazonElasticCache.Memcached.Memcached_LARGE]

[Database.AmazonElasticCache.Redis]

[Database.AmazonElasticCache.Redis.Redis]

[Database.AmazonElasticCache.Redis.Redis_LARGE]

[Database.AmazonElasticCache.cachenode]

[Database.AmazonElasticCache.cachenode.cachenode]

[Database.AmazonElasticCache.cachenode.cachenode_LARGE]

[Database.AmazonRDS]
entity_type: component

[Database.AmazonRDS.AmazonRDS]
entity_type: node

[Database.AmazonRDS.AmazonRDS_LARGE]
entity_type: node

[Database.AmazonRDS.DBinstance]

[Database.AmazonRDS.DBinstance.DBinstance]

[Database.AmazonRDS.DBinstance.DBinstance_LARGE]

[Database.AmazonRDS.MSSQLinstance]

[Database.AmazonRDS.MSSQLinstance.MSSQLinstance]

[Database.AmazonRDS.MSSQLinstance.MSSQLinstance_LARGE]

[Database.AmazonRDS.MSSQLinstancealternate]

[Database.AmazonRDS.MSSQLinstancealternate.MSSQLinstancealternate]

[Database.AmazonRDS.MSSQLinstancealternate.MSSQLinstancealternate_LARGE]

[Database.AmazonRDS.MySQLDBinstance]

[Database.AmazonRDS.MySQLDBinstance.MySQLDBinstance]

[Database.AmazonRDS.MySQLDBinstance.MySQLDBinstance_LARGE]

[Database.AmazonRDS.MySQLinstancealternate]

[Database.AmazonRDS.MySQLinstancealternate.MySQLinstancealternate]

[Database.AmazonRDS.MySQLinstancealternate.MySQLinstancealternate_LARGE]

[Database.AmazonRDS.OracleDBinstancealternate]

[Database.AmazonRDS.OracleDBinstancealternate.OracleDBinstancealternate]

[Database.AmazonRDS.OracleDBinstancealternate.OracleDBinstancealternate_LARGE]

[Database.AmazonRDS.PIOP]

[Database.AmazonRDS.PIOP.PIOP]

[Database.AmazonRDS.PIOP.PIOP_LARGE]

[Database.AmazonRDS.PostgreSQLinstance]

[Database.AmazonRDS.PostgreSQLinstance.PostgreSQLinstance]

[Database.AmazonRDS.PostgreSQLinstance.PostgreSQLinstance_LARGE]

[Database.AmazonRDS.SQLmaster]

[Database.AmazonRDS.SQLmaster.SQLmaster]

[Database.AmazonRDS.SQLmaster.SQLmaster_LARGE]

[Database.AmazonRDS.SQLslave]

[Database.AmazonRDS.SQLslave.SQLslave]

[Database.AmazonRDS.SQLslave.SQLslave_LARGE]

[Database.AmazonRDS.instancereadreplica]

[Database.AmazonRDS.instancereadreplica.instancereadreplica]

[Database.AmazonRDS.instancereadreplica.instancereadreplica_LARGE]

[Database.AmazonRDS.instancestandby]

[Database.AmazonRDS.instancestandby.instancestandby]

[Database.AmazonRDS.instancestandby.instancestandby_LARGE]

[Database.AmazonRDS.oracleDBinstance]

[Database.AmazonRDS.oracleDBinstance.oracleDBinstance]

[Database.AmazonRDS.oracleDBinstance.oracleDBinstance_LARGE]

[Database.AmazonRedshift]

[Database.AmazonRedshift.AmazonRedshift]
entity_type: node

[Database.AmazonRedshift.AmazonRedshift_LARGE]
entity_type: node

[Database.AmazonRedshift.densecomputenode]

[Database.AmazonRedshift.densecomputenode.densecomputenode]

[Database.AmazonRedshift.densecomputenode.densecomputenode_LARGE]

[Database.AmazonRedshift.densestoragenode]

[Database.AmazonRedshift.densestoragenode.densestoragenode]

[Database.AmazonRedshift.densestoragenode.densestoragenode_LARGE]

[DesktopAppStreaming]
color: ${AWSPUML.colors:orange}
entity_type: component

[DesktopAppStreaming.AmazonAppStream2_0]
color: ${AWSPUML.colors:goldenrod}
entity_type: node

[DesktopAppStreaming.AmazonAppStream2_0.AmazonAppStream2_0]

[DesktopAppStreaming.AmazonAppStream2_0.AmazonAppStream2_0_LARGE]

[DesktopAppStreaming.AmazonWorkSpaces]

[DesktopAppStreaming.AmazonWorkSpaces.AmazonWorkSpaces]

[DesktopAppStreaming.AmazonWorkSpaces.AmazonWorkSpaces_LARGE]

[DeveloperTools]
color: ${AWSPUML.colors:green}
entity_type: component

[DeveloperTools.AWSCodeBuild]

[DeveloperTools.AWSCodeBuild.AWSCodeBuild]

[DeveloperTools.AWSCodeBuild.AWSCodeBuild_LARGE]

[DeveloperTools.AWSCodeCommit]

[DeveloperTools.AWSCodeCommit.AWSCodeCommit]

[DeveloperTools.AWSCodeCommit.AWSCodeCommit_LARGE]

[DeveloperTools.AWSCodeDeploy]

[DeveloperTools.AWSCodeDeploy.AWSCodeDeploy]

[DeveloperTools.AWSCodeDeploy.AWSCodeDeploy_LARGE]

[DeveloperTools.AWSCodePipeline]

[DeveloperTools.AWSCodePipeline.AWSCodePipeline]

[DeveloperTools.AWSCodePipeline.AWSCodePipeline_LARGE]

[DeveloperTools.AWSX_Ray]

[DeveloperTools.AWSX_Ray.AWSX_Ray]

[DeveloperTools.AWSX_Ray.AWSX_Ray_LARGE]

[GameDevelopment]
color: ${AWSPUML.colors:purple}
entity_type: node

[GameDevelopment.AmazonGameLift]

[GameDevelopment.AmazonGameLift.AmazonGameLift]

[GameDevelopment.AmazonGameLift.AmazonGameLift_LARGE]

[General]
color: ${AWSPUML.colors:grey}

[General.AWSManagementConsole]
color: ${AWSPUML.colors:orange}
entity_type: agent

[General.AWSManagementConsole.AWSManagementConsole]

[General.AWSManagementConsole.AWSManagementConsole_LARGE]

[General.AWScloud]
color: ${AWSPUML.colors:orange}
entity_type: cloud
skinparam: BorderColor ${AWSPUML.colors:orange}

[General.AWScloud.AWScloud]

[General.AWScloud.AWScloud_LARGE]

[General.Internet]
color: ${AWSPUML.colors:light-grey}
entity_type: cloud
skinparam: BorderColor ${AWSPUML.colors:grey}

[General.Internet.Internet]

[General.Internet.Internet_LARGE]

[General.Internetalternate1]
color: ${AWSPUML.colors:light-grey}
entity_type: cloud
skinparam: BorderColor ${AWSPUML.colors:grey}

[General.Internetalternate1.Internetalternate1]

[General.Internetalternate1.Internetalternate1_LARGE]

[General.Internetalternate2]
color: ${AWSPUML.colors:light-grey}
entity_type: cloud
skinparam: BorderColor ${AWSPUML.colors:grey}

[General.Internetalternate2.Internetalternate2]

[General.Internetalternate2.Internetalternate2_LARGE]

[General.SAMLtoken]
entity_type: artifact

[General.SAMLtoken.SAMLtoken]

[General.SAMLtoken.SAMLtoken_LARGE]

[General.SSLpadlock]
entity_type: frame

[General.SSLpadlock.SSLpadlock]

[General.SSLpadlock.SSLpadlock_LARGE]

[General.client]
color: ${AWSPUML.colors:grey}
entity_type: agent

[General.client.client]

[General.client.client_LARGE]

[General.corporatedatacenter]
entity_type: storage

[General.corporatedatacenter.corporatedatacenter]

[General.corporatedatacenter.corporatedatacenter_LARGE]

[General.disk]
entity_type: artifact

[General.disk.disk]

[General.disk.disk_LARGE]

[General.forums]
color: ${AWSPUML.colors:orange}
entity_type: artifact

[General.forums.forums]

[General.forums.forums_LARGE]

[General.genericdatabase]
entity_type: database

[General.genericdatabase.genericdatabase]

[General.genericdatabase.genericdatabase_LARGE]

[General.mobileclient]
color: ${AWSPUML.colors:grey}
entity_type: agent

[General.mobileclient.mobileclient]

[General.mobileclient.mobileclient_LARGE]

[General.multimedia]
color: ${AWSPUML.colors:light-grey}
entity_type: artifact

[General.multimedia.multimedia]

[General.multimedia.multimedia_LARGE]

[General.officebuilding]
entity_type: node

[General.officebuilding.officebuilding]

[General.officebuilding.officebuilding_LARGE]

[General.tapestorage]
entity_type: storage

[General.tapestorage.tapestorage]

[General.tapestorage.tapestorage_LARGE]

[General.traditionalserver]
entity_type: node

[General.traditionalserver.traditionalserver]

[General.traditionalserver.traditionalserver_LARGE]

[General.user]
color: ${AWSPUML.colors:light-grey}
entity_type: agent
skinparam: BorderColor transparent

[General.user.user]

[General.user.user_LARGE]

[General.users]
color: ${AWSPUML.colors:light-grey}
entity_type: agent
skinparam: BorderColor transparent

[General.users.users]

[General.users.users_LARGE]

[General.virtualprivatecloud]
color: ${AWSPUML.colors:orange}
entity_type: cloud
skinparam: BorderColor ${AWSPUML.colors:orange}

[General.virtualprivatecloud.virtualprivatecloud]

[General.virtualprivatecloud.virtualprivatecloud_LARGE]

[InternetOfThings]
color: ${AWSPUML.colors:blue}
entity_type: node

[InternetOfThings.AVSenableddevice]
entity_type: component

[InternetOfThings.AVSenableddevice.AVSenableddevice]

[InternetOfThings.AVSenableddevice.AVSenableddevice_LARGE]

[InternetOfThings.AWSGreengrass]

[InternetOfThings.AWSGreengrass.AWSGreengrass]

[InternetOfThings.AWSGreengrass.AWSGreengrass_LARGE]

[InternetOfThings.AWSIoT]

[InternetOfThings.AWSIoT.AWSIoT]

[InternetOfThings.AWSIoT.AWSIoT_LARGE]

[InternetOfThings.AWSIoT.HTTP2protocol]
entity_type: interface
skinparam: BackgroundColor ${AWSPUML.colors:light-blue}
           BorderColor ${AWSPUML.colors:blue}

[InternetOfThings.AWSIoT.HTTP2protocol.HTTP2protocol]

[InternetOfThings.AWSIoT.HTTP2protocol.HTTP2protocol_LARGE]

[InternetOfThings.AWSIoT.HTTPprotocol]
entity_type: interface
skinparam: BackgroundColor ${AWSPUML.colors:light-blue}
           BorderColor ${AWSPUML.colors:blue}

[InternetOfThings.AWSIoT.HTTPprotocol.HTTPprotocol]

[InternetOfThings.AWSIoT.HTTPprotocol.HTTPprotocol_LARGE]

[InternetOfThings.AWSIoT.MQTTprotocol]
entity_type: interface
skinparam: BackgroundColor ${AWSPUML.colors:light-blue}
           BorderColor ${AWSPUML.colors:blue}

[InternetOfThings.AWSIoT.MQTTprotocol.MQTTprotocol]

[InternetOfThings.AWSIoT.MQTTprotocol.MQTTprotocol_LARGE]

[InternetOfThings.AWSIoT.action]
entity_type: usecase
skinparam: BackgroundColor ${AWSPUML.colors:light-blue}
           BorderColor ${AWSPUML.colors:blue}

[InternetOfThings.AWSIoT.action.action]

[InternetOfThings.AWSIoT.action.action_LARGE]

[InternetOfThings.AWSIoT.actuator]

[InternetOfThings.AWSIoT.actuator.actuator]

[InternetOfThings.AWSIoT.actuator.actuator_LARGE]

[InternetOfThings.AWSIoT.certificate]
entity_type: artifact

[InternetOfThings.AWSIoT.certificate.certificate]

[InternetOfThings.AWSIoT.certificate.certificate_LARGE]

[InternetOfThings.AWSIoT.desiredstate]
entity_type: artifact

[InternetOfThings.AWSIoT.desiredstate.desiredstate]

[InternetOfThings.AWSIoT.desiredstate.desiredstate_LARGE]

[InternetOfThings.AWSIoT.hardwareboard]

[InternetOfThings.AWSIoT.hardwareboard.hardwareboard]

[InternetOfThings.AWSIoT.hardwareboard.hardwareboard_LARGE]

[InternetOfThings.AWSIoT.policy]
entity_type: artifact

[InternetOfThings.AWSIoT.policy.policy]

[InternetOfThings.AWSIoT.policy.policy_LARGE]

[InternetOfThings.AWSIoT.reportedstate]
entity_type: artifact

[InternetOfThings.AWSIoT.reportedstate.reportedstate]

[InternetOfThings.AWSIoT.reportedstate.reportedstate_LARGE]

[InternetOfThings.AWSIoT.rule]

[InternetOfThings.AWSIoT.rule.rule]

[InternetOfThings.AWSIoT.rule.rule_LARGE]

[InternetOfThings.AWSIoT.sensor]

[InternetOfThings.AWSIoT.sensor.sensor]

[InternetOfThings.AWSIoT.sensor.sensor_LARGE]

[InternetOfThings.AWSIoT.servo]

[InternetOfThings.AWSIoT.servo.servo]

[InternetOfThings.AWSIoT.servo.servo_LARGE]

[InternetOfThings.AWSIoT.shadow]

[InternetOfThings.AWSIoT.shadow.shadow]

[InternetOfThings.AWSIoT.shadow.shadow_LARGE]

[InternetOfThings.AWSIoT.simulator]

[InternetOfThings.AWSIoT.simulator.simulator]

[InternetOfThings.AWSIoT.simulator.simulator_LARGE]

[InternetOfThings.AWSIoT.thingbank]

[InternetOfThings.AWSIoT.thingbank.thingbank]

[InternetOfThings.AWSIoT.thingbank.thingbank_LARGE]

[InternetOfThings.AWSIoT.thingbicycle]

[InternetOfThings.AWSIoT.thingbicycle.thingbicycle]

[InternetOfThings.AWSIoT.thingbicycle.thingbicycle_LARGE]

[InternetOfThings.AWSIoT.thingcamera]

[InternetOfThings.AWSIoT.thingcamera.thingcamera]

[InternetOfThings.AWSIoT.thingcamera.thingcamera_LARGE]

[InternetOfThings.AWSIoT.thingcar]

[InternetOfThings.AWSIoT.thingcar.thingcar]

[InternetOfThings.AWSIoT.thingcar.thingcar_LARGE]

[InternetOfThings.AWSIoT.thingcart]

[InternetOfThings.AWSIoT.thingcart.thingcart]

[InternetOfThings.AWSIoT.thingcart.thingcart_LARGE]

[InternetOfThings.AWSIoT.thingcoffeepot]

[InternetOfThings.AWSIoT.thingcoffeepot.thingcoffeepot]

[InternetOfThings.AWSIoT.thingcoffeepot.thingcoffeepot_LARGE]

[InternetOfThings.AWSIoT.thingdoorlock]

[InternetOfThings.AWSIoT.thingdoorlock.thingdoorlock]

[InternetOfThings.AWSIoT.thingdoorlock.thingdoorlock_LARGE]

[InternetOfThings.AWSIoT.thingfactory]

[InternetOfThings.AWSIoT.thingfactory.thingfactory]

[InternetOfThings.AWSIoT.thingfactory.thingfactory_LARGE]

[InternetOfThings.AWSIoT.thinggeneric]

[InternetOfThings.AWSIoT.thinggeneric.thinggeneric]

[InternetOfThings.AWSIoT.thinggeneric.thinggeneric_LARGE]

[InternetOfThings.AWSIoT.thinghouse]

[InternetOfThings.AWSIoT.thinghouse.thinghouse]

[InternetOfThings.AWSIoT.thinghouse.thinghouse_LARGE]

[InternetOfThings.AWSIoT.thinglightbulb]

[InternetOfThings.AWSIoT.thinglightbulb.thinglightbulb]

[InternetOfThings.AWSIoT.thinglightbulb.thinglightbulb_LARGE]

[InternetOfThings.AWSIoT.thingmedicalemergency]

[InternetOfThings.AWSIoT.thingmedicalemergency.thingmedicalemergency]

[InternetOfThings.AWSIoT.thingmedicalemergency.thingmedicalemergency_LARGE]

[InternetOfThings.AWSIoT.thingpoliceemergency]

[InternetOfThings.AWSIoT.thingpoliceemergency.thingpoliceemergency]

[InternetOfThings.AWSIoT.thingpoliceemergency.thingpoliceemergency_LARGE]

[InternetOfThings.AWSIoT.thingthermostat]

[InternetOfThings.AWSIoT.thingthermostat.thingthermostat]

[InternetOfThings.AWSIoT.thingthermostat.thingthermostat_LARGE]

[InternetOfThings.AWSIoT.thingtravel]

[InternetOfThings.AWSIoT.thingtravel.thingtravel]

[InternetOfThings.AWSIoT.thingtravel.thingtravel_LARGE]

[InternetOfThings.AWSIoT.thingutility]

[InternetOfThings.AWSIoT.thingutility.thingutility]

[InternetOfThings.AWSIoT.thingutility.thingutility_LARGE]

[InternetOfThings.AWSIoT.thingwindfarm]

[InternetOfThings.AWSIoT.thingwindfarm.thingwindfarm]

[InternetOfThings.AWSIoT.thingwindfarm.thingwindfarm_LARGE]

[InternetOfThings.AWSIoT.topic]
entity_type: artifact

[InternetOfThings.AWSIoT.topic.topic]

[InternetOfThings.AWSIoT.topic.topic_LARGE]

[InternetOfThings.alexaskill]
entity_type: component

[InternetOfThings.alexaskill.alexaskill]

[InternetOfThings.alexaskill.alexaskill_LARGE]

[InternetOfThings.alexasmarthomeskill]

[InternetOfThings.alexasmarthomeskill.alexasmarthomeskill]

[InternetOfThings.alexasmarthomeskill.alexasmarthomeskill_LARGE]

[InternetOfThings.alexavoiceservice]
entity_type: node

[InternetOfThings.alexavoiceservice.alexavoiceservice]

[InternetOfThings.alexavoiceservice.alexavoiceservice_LARGE]

[InternetOfThings.echo]

[InternetOfThings.echo.echo]

[InternetOfThings.echo.echo_LARGE]

[InternetOfThings.fireTV]

[InternetOfThings.fireTV.fireTV]

[InternetOfThings.fireTV.fireTV_LARGE]

[InternetOfThings.fireTVstick]

[InternetOfThings.fireTVstick.fireTVstick]

[InternetOfThings.fireTVstick.fireTVstick_LARGE]

[InternetOfThings.lambdafunction]

[InternetOfThings.lambdafunction.lambdafunction]

[InternetOfThings.lambdafunction.lambdafunction_LARGE]

[ManagementTools]
color: ${AWSPUML.colors:green}
entity_type: node

[ManagementTools.AWSCloudFormation]
entity_type: artifact

[ManagementTools.AWSCloudFormation.AWSCloudFormation]
entity_type: node

[ManagementTools.AWSCloudFormation.AWSCloudFormation_LARGE]
entity_type: node

[ManagementTools.AWSCloudFormation.changeset]

[ManagementTools.AWSCloudFormation.changeset.changeset]

[ManagementTools.AWSCloudFormation.changeset.changeset_LARGE]

[ManagementTools.AWSCloudFormation.stack]

[ManagementTools.AWSCloudFormation.stack.stack]

[ManagementTools.AWSCloudFormation.stack.stack_LARGE]

[ManagementTools.AWSCloudFormation.template]

[ManagementTools.AWSCloudFormation.template.template]

[ManagementTools.AWSCloudFormation.template.template_LARGE]

[ManagementTools.AWSCloudTrail]

[ManagementTools.AWSCloudTrail.AWSCloudTrail]

[ManagementTools.AWSCloudTrail.AWSCloudTrail_LARGE]

[ManagementTools.AWSConfig]

[ManagementTools.AWSConfig.AWSConfig]

[ManagementTools.AWSConfig.AWSConfig_LARGE]

[ManagementTools.AWSManagedServices]

[ManagementTools.AWSManagedServices.AWSManagedServices]

[ManagementTools.AWSManagedServices.AWSManagedServices_LARGE]

[ManagementTools.AWSOpsWorks]
entity_type: artifact

[ManagementTools.AWSOpsWorks.AWSOpsWorks]
entity_type: node

[ManagementTools.AWSOpsWorks.AWSOpsWorks_LARGE]
entity_type: node

[ManagementTools.AWSOpsWorks.apps]

[ManagementTools.AWSOpsWorks.apps.apps]

[ManagementTools.AWSOpsWorks.apps.apps_LARGE]

[ManagementTools.AWSOpsWorks.deployments]

[ManagementTools.AWSOpsWorks.deployments.deployments]

[ManagementTools.AWSOpsWorks.deployments.deployments_LARGE]

[ManagementTools.AWSOpsWorks.instances]

[ManagementTools.AWSOpsWorks.instances.instances]

[ManagementTools.AWSOpsWorks.instances.instances_LARGE]

[ManagementTools.AWSOpsWorks.layers]

[ManagementTools.AWSOpsWorks.layers.layers]

[ManagementTools.AWSOpsWorks.layers.layers_LARGE]

[ManagementTools.AWSOpsWorks.monitoring]

[ManagementTools.AWSOpsWorks.monitoring.monitoring]

[ManagementTools.AWSOpsWorks.monitoring.monitoring_LARGE]

[ManagementTools.AWSOpsWorks.permissions]

[ManagementTools.AWSOpsWorks.permissions.permissions]

[ManagementTools.AWSOpsWorks.permissions.permissions_LARGE]

[ManagementTools.AWSOpsWorks.resources]

[ManagementTools.AWSOpsWorks.resources.resources]

[ManagementTools.AWSOpsWorks.resources.resources_LARGE]

[ManagementTools.AWSOpsWorks.stack]

[ManagementTools.AWSOpsWorks.stack.stack]

[ManagementTools.AWSOpsWorks.stack.stack_LARGE]

[ManagementTools.AWSServiceCatalog]

[ManagementTools.AWSServiceCatalog.AWSServiceCatalog]

[ManagementTools.AWSServiceCatalog.AWSServiceCatalog_LARGE]

[ManagementTools.AWSTrustedAdvisor]
entity_type: artifact

[ManagementTools.AWSTrustedAdvisor.AWSTrustedAdvisor]
entity_type: node

[ManagementTools.AWSTrustedAdvisor.AWSTrustedAdvisor_LARGE]
entity_type: node

[ManagementTools.AWSTrustedAdvisor.checklist]

[ManagementTools.AWSTrustedAdvisor.checklist.checklist]

[ManagementTools.AWSTrustedAdvisor.checklist.checklist_LARGE]

[ManagementTools.AWSTrustedAdvisor.checklistcost]

[ManagementTools.AWSTrustedAdvisor.checklistcost.checklistcost]

[ManagementTools.AWSTrustedAdvisor.checklistcost.checklistcost_LARGE]

[ManagementTools.AWSTrustedAdvisor.checklistfaulttolerance]

[ManagementTools.AWSTrustedAdvisor.checklistfaulttolerance.checklistfaulttolerance]

[ManagementTools.AWSTrustedAdvisor.checklistfaulttolerance.checklistfaulttolerance_LARGE]

[ManagementTools.AWSTrustedAdvisor.checklistperformance]

[ManagementTools.AWSTrustedAdvisor.checklistperformance.checklistperformance]

[ManagementTools.AWSTrustedAdvisor.checklistperformance.checklistperformance_LARGE]

[ManagementTools.AWSTrustedAdvisor.checklistsecurity]

[ManagementTools.AWSTrustedAdvisor.checklistsecurity.checklistsecurity]

[ManagementTools.AWSTrustedAdvisor.checklistsecurity.checklistsecurity_LARGE]

[ManagementTools.AmazonCloudWatch]
entity_type: artifact

[ManagementTools.AmazonCloudWatch.AmazonCloudWatch]
entity_type: node

[ManagementTools.AmazonCloudWatch.AmazonCloudWatch_LARGE]
entity_type: node

[ManagementTools.AmazonCloudWatch.alarm]

[ManagementTools.AmazonCloudWatch.alarm.alarm]

[ManagementTools.AmazonCloudWatch.alarm.alarm_LARGE]

[ManagementTools.AmazonCloudWatch.configrule]

[ManagementTools.AmazonCloudWatch.configrule.configrule]

[ManagementTools.AmazonCloudWatch.configrule.configrule_LARGE]

[ManagementTools.AmazonCloudWatch.eventeventbased]

[ManagementTools.AmazonCloudWatch.eventeventbased.eventeventbased]

[ManagementTools.AmazonCloudWatch.eventeventbased.eventeventbased_LARGE]

[ManagementTools.AmazonCloudWatch.eventtimebased]

[ManagementTools.AmazonCloudWatch.eventtimebased.eventtimebased]

[ManagementTools.AmazonCloudWatch.eventtimebased.eventtimebased_LARGE]

[Messaging]
color: ${AWSPUML.colors:goldenrod}
entity_type: node

[Messaging.AmazonPinpoint]

[Messaging.AmazonPinpoint.AmazonPinpoint]

[Messaging.AmazonPinpoint.AmazonPinpoint_LARGE]

[Messaging.AmazonSES]
entity_type: artifact

[Messaging.AmazonSES.AmazonSES]
entity_type: node

[Messaging.AmazonSES.AmazonSES_LARGE]
entity_type: node

[Messaging.AmazonSES.email]

[Messaging.AmazonSES.email.email]

[Messaging.AmazonSES.email.email_LARGE]

[Messaging.AmazonSNS]
entity_type: artifact
skinparam: BackgroundColor ${AWSPUML.colors:light-purple}

[Messaging.AmazonSNS.AmazonSNS]
entity_type: node

[Messaging.AmazonSNS.AmazonSNS_LARGE]
entity_type: node

[Messaging.AmazonSNS.HTTPnotification]

[Messaging.AmazonSNS.HTTPnotification.HTTPnotification]

[Messaging.AmazonSNS.HTTPnotification.HTTPnotification_LARGE]

[Messaging.AmazonSNS.emailnotification]

[Messaging.AmazonSNS.emailnotification.emailnotification]

[Messaging.AmazonSNS.emailnotification.emailnotification_LARGE]

[Messaging.AmazonSNS.topic]

[Messaging.AmazonSNS.topic.topic]

[Messaging.AmazonSNS.topic.topic_LARGE]

[Messaging.AmazonSQS]
entity_type: artifact

[Messaging.AmazonSQS.AmazonSQS]
entity_type: node

[Messaging.AmazonSQS.AmazonSQS_LARGE]
entity_type: node

[Messaging.AmazonSQS.message]

[Messaging.AmazonSQS.message.message]

[Messaging.AmazonSQS.message.message_LARGE]

[Messaging.AmazonSQS.queue]

[Messaging.AmazonSQS.queue.queue]

[Messaging.AmazonSQS.queue.queue_LARGE]

[Migration]
color: ${AWSPUML.colors:blue}
entity_type: node

[Migration.AWSApplicationDiscoveryService]

[Migration.AWSApplicationDiscoveryService.AWSApplicationDiscoveryService]

[Migration.AWSApplicationDiscoveryService.AWSApplicationDiscoveryService_LARGE]

[Migration.AWSDMS]

[Migration.AWSDMS.AWSDMS]

[Migration.AWSDMS.AWSDMS_LARGE]

[Migration.AWSDMS.databasemigrationworkflow_job]
entity_type: agent

[Migration.AWSDMS.databasemigrationworkflow_job.databasemigrationworkflow_job]

[Migration.AWSDMS.databasemigrationworkflow_job.databasemigrationworkflow_job_LARGE]

[Migration.AWSSMS]

[Migration.AWSSMS.AWSSMS]

[Migration.AWSSMS.AWSSMS_LARGE]

[Migration.AWSSnowball]
color: ${AWSPUML.colors:red}
entity_type: node

[Migration.AWSSnowball.AWSSnowball]

[Migration.AWSSnowball.AWSSnowball_LARGE]

[Migration.AWSSnowball.importexport]
entity_type: agent

[Migration.AWSSnowball.importexport.importexport]

[Migration.AWSSnowball.importexport.importexport_LARGE]

[MobileServices]
color: ${AWSPUML.colors:purple}
entity_type: node

[MobileServices.AWSDeviceFarm]

[MobileServices.AWSDeviceFarm.AWSDeviceFarm]

[MobileServices.AWSDeviceFarm.AWSDeviceFarm_LARGE]

[MobileServices.AWSMobileHub]

[MobileServices.AWSMobileHub.AWSMobileHub]

[MobileServices.AWSMobileHub.AWSMobileHub_LARGE]

[MobileServices.AmazonAPIGateway]

[MobileServices.AmazonAPIGateway.AmazonAPIGateway]

[MobileServices.AmazonAPIGateway.AmazonAPIGateway_LARGE]

[MobileServices.AmazonCognito]

[MobileServices.AmazonCognito.AmazonCognito]

[MobileServices.AmazonCognito.AmazonCognito_LARGE]

[MobileServices.AmazonMobileAnalytics]

[MobileServices.AmazonMobileAnalytics.AmazonMobileAnalytics]

[MobileServices.AmazonMobileAnalytics.AmazonMobileAnalytics_LARGE]

[MobileServices.AmazonPinpoint]

[MobileServices.AmazonPinpoint.AmazonPinpoint]

[MobileServices.AmazonPinpoint.AmazonPinpoint_LARGE]

[NetworkingContentDelivery]
color: ${AWSPUML.colors:orange}
entity_type: node

[NetworkingContentDelivery.AWSDirectConnect]

[NetworkingContentDelivery.AWSDirectConnect.AWSDirectConnect]

[NetworkingContentDelivery.AWSDirectConnect.AWSDirectConnect_LARGE]

[NetworkingContentDelivery.AmazonCloudFront]
entity_type: entity
skinparam: BackgroundColor transparent
           BorderColor ${AWSPUML.colors:red}

[NetworkingContentDelivery.AmazonCloudFront.AmazonCloudFront]
entity_type: node

[NetworkingContentDelivery.AmazonCloudFront.AmazonCloudFront_LARGE]
entity_type: node

[NetworkingContentDelivery.AmazonCloudFront.downloaddistribution]

[NetworkingContentDelivery.AmazonCloudFront.downloaddistribution.downloaddistribution]

[NetworkingContentDelivery.AmazonCloudFront.downloaddistribution.downloaddistribution_LARGE]

[NetworkingContentDelivery.AmazonCloudFront.edgelocation]

[NetworkingContentDelivery.AmazonCloudFront.edgelocation.edgelocation]

[NetworkingContentDelivery.AmazonCloudFront.edgelocation.edgelocation_LARGE]

[NetworkingContentDelivery.AmazonCloudFront.streamingdistribution]

[NetworkingContentDelivery.AmazonCloudFront.streamingdistribution.streamingdistribution]

[NetworkingContentDelivery.AmazonCloudFront.streamingdistribution.streamingdistribution_LARGE]

[NetworkingContentDelivery.AmazonRoute53]

[NetworkingContentDelivery.AmazonRoute53.AmazonRoute53]

[NetworkingContentDelivery.AmazonRoute53.AmazonRoute53_LARGE]

[NetworkingContentDelivery.AmazonRoute53.hostedzone]
entity_type: frame

[NetworkingContentDelivery.AmazonRoute53.hostedzone.hostedzone]

[NetworkingContentDelivery.AmazonRoute53.hostedzone.hostedzone_LARGE]

[NetworkingContentDelivery.AmazonRoute53.routetable]
entity_type: artifact

[NetworkingContentDelivery.AmazonRoute53.routetable.routetable]

[NetworkingContentDelivery.AmazonRoute53.routetable.routetable_LARGE]

[NetworkingContentDelivery.AmazonVPC]
entity_type: interface
skinparam: BackgroundColor ${AWSPUML.colors:light-orange}
           BorderColor ${AWSPUML.colors:orange}

[NetworkingContentDelivery.AmazonVPC.AmazonVPC]
entity_type: cloud

[NetworkingContentDelivery.AmazonVPC.AmazonVPC_LARGE]
entity_type: cloud

[NetworkingContentDelivery.AmazonVPC.VPCNATgateway]

[NetworkingContentDelivery.AmazonVPC.VPCNATgateway.VPCNATgateway]

[NetworkingContentDelivery.AmazonVPC.VPCNATgateway.VPCNATgateway_LARGE]

[NetworkingContentDelivery.AmazonVPC.VPCpeering]

[NetworkingContentDelivery.AmazonVPC.VPCpeering.VPCpeering]

[NetworkingContentDelivery.AmazonVPC.VPCpeering.VPCpeering_LARGE]

[NetworkingContentDelivery.AmazonVPC.VPNconnection]

[NetworkingContentDelivery.AmazonVPC.VPNconnection.VPNconnection]

[NetworkingContentDelivery.AmazonVPC.VPNconnection.VPNconnection_LARGE]

[NetworkingContentDelivery.AmazonVPC.VPNgateway]

[NetworkingContentDelivery.AmazonVPC.VPNgateway.VPNgateway]

[NetworkingContentDelivery.AmazonVPC.VPNgateway.VPNgateway_LARGE]

[NetworkingContentDelivery.AmazonVPC.customergateway]

[NetworkingContentDelivery.AmazonVPC.customergateway.customergateway]

[NetworkingContentDelivery.AmazonVPC.customergateway.customergateway_LARGE]

[NetworkingContentDelivery.AmazonVPC.elasticnetworkadapter]

[NetworkingContentDelivery.AmazonVPC.elasticnetworkadapter.elasticnetworkadapter]

[NetworkingContentDelivery.AmazonVPC.elasticnetworkadapter.elasticnetworkadapter_LARGE]

[NetworkingContentDelivery.AmazonVPC.elasticnetworkinterface]

[NetworkingContentDelivery.AmazonVPC.elasticnetworkinterface.elasticnetworkinterface]

[NetworkingContentDelivery.AmazonVPC.elasticnetworkinterface.elasticnetworkinterface_LARGE]

[NetworkingContentDelivery.AmazonVPC.endpoints]

[NetworkingContentDelivery.AmazonVPC.endpoints.endpoints]

[NetworkingContentDelivery.AmazonVPC.endpoints.endpoints_LARGE]

[NetworkingContentDelivery.AmazonVPC.flowlogs]
entity_type: artifact
skinparam: BackgroundColor White
           BorderColor Black

[NetworkingContentDelivery.AmazonVPC.flowlogs.flowlogs]

[NetworkingContentDelivery.AmazonVPC.flowlogs.flowlogs_LARGE]

[NetworkingContentDelivery.AmazonVPC.internetgateway]

[NetworkingContentDelivery.AmazonVPC.internetgateway.internetgateway]

[NetworkingContentDelivery.AmazonVPC.internetgateway.internetgateway_LARGE]

[NetworkingContentDelivery.AmazonVPC.router]

[NetworkingContentDelivery.AmazonVPC.router.router]

[NetworkingContentDelivery.AmazonVPC.router.router_LARGE]

[NetworkingContentDelivery.ElasticLoadBalancing]

[NetworkingContentDelivery.ElasticLoadBalancing.ApplicationLoadBalancer]

[NetworkingContentDelivery.ElasticLoadBalancing.ApplicationLoadBalancer.ApplicationLoadBalancer]

[NetworkingContentDelivery.ElasticLoadBalancing.ApplicationLoadBalancing]

[NetworkingContentDelivery.ElasticLoadBalancing.ApplicationLoadBalancing.ApplicationLoadBalancing_LARGE]

[NetworkingContentDelivery.ElasticLoadBalancing.ClassicLoadBalancer]

[NetworkingContentDelivery.ElasticLoadBalancing.ClassicLoadBalancer.ClassicLoadBalancer]

[NetworkingContentDelivery.ElasticLoadBalancing.ClassicLoadBalancer.ClassicLoadBalancer_LARGE]

[NetworkingContentDelivery.ElasticLoadBalancing.ElasticLoadBalancing]

[NetworkingContentDelivery.ElasticLoadBalancing.ElasticLoadBalancing_LARGE]

[OnDemandWorkforce]
color: ${AWSPUML.colors:light-grey}
entity_type: artifact

[OnDemandWorkforce.AmazonMechanicalTurk]

[OnDemandWorkforce.AmazonMechanicalTurk.AmazonMechanicalTurk]
color: ${AWSPUML.colors:grey}
entity_type: node

[OnDemandWorkforce.AmazonMechanicalTurk.AmazonMechanicalTurk_LARGE]
color: ${AWSPUML.colors:grey}
entity_type: node

[OnDemandWorkforce.AmazonMechanicalTurk.assignmenttask]

[OnDemandWorkforce.AmazonMechanicalTurk.assignmenttask.assignmenttask]

[OnDemandWorkforce.AmazonMechanicalTurk.assignmenttask.assignmenttask_LARGE]

[OnDemandWorkforce.AmazonMechanicalTurk.humanintelligencetasks]

[OnDemandWorkforce.AmazonMechanicalTurk.humanintelligencetasks.humanintelligencetasks]

[OnDemandWorkforce.AmazonMechanicalTurk.humanintelligencetasks.humanintelligencetasks_LARGE]

[OnDemandWorkforce.AmazonMechanicalTurk.requester]

[OnDemandWorkforce.AmazonMechanicalTurk.requester.requester]

[OnDemandWorkforce.AmazonMechanicalTurk.requester.requester_LARGE]

[OnDemandWorkforce.AmazonMechanicalTurk.workers]

[OnDemandWorkforce.AmazonMechanicalTurk.workers.workers]

[OnDemandWorkforce.AmazonMechanicalTurk.workers.workers_LARGE]

[SDKs]
entity_type: agent

[SDKs.AWSCLI]

[SDKs.AWSCLI.AWSCLI]

[SDKs.AWSCLI.AWSCLI_LARGE]

[SDKs.AWSToolkitForEclipse]

[SDKs.AWSToolkitForEclipse.AWSToolkitForEclipse]

[SDKs.AWSToolkitForEclipse.AWSToolkitForEclipse_LARGE]

[SDKs.AWSToolkitForVisualStudio]

[SDKs.AWSToolkitForVisualStudio.AWSToolkitForVisualStudio]

[SDKs.AWSToolkitForVisualStudio.AWSToolkitForVisualStudio_LARGE]

[SDKs.AWSToolsForWindowsPowerShell]

[SDKs.AWSToolsForWindowsPowerShell.AWSToolsForWindowsPowerShell]

[SDKs.AWSToolsForWindowsPowerShell.AWSToolsForWindowsPowerShell_LARGE]

[SDKs.Android]

[SDKs.Android.Android]

[SDKs.Android.Android_LARGE]

[SDKs.Java]

[SDKs.Java.Java]

[SDKs.Java.Java_LARGE]

[SDKs.JavaScript]

[SDKs.JavaScript.JavaScript]

[SDKs.JavaScript.JavaScript_LARGE]

[SDKs.Net]

[SDKs.Net.Net]

[SDKs.Net.Net_LARGE]

[SDKs.Nodejs]

[SDKs.Nodejs.Nodejs]

[SDKs.Nodejs.Nodejs_LARGE]

[SDKs.PHP]

[SDKs.PHP.PHP]

[SDKs.PHP.PHP_LARGE]

[SDKs.Python]

[SDKs.Python.Python]

[SDKs.Python.Python_LARGE]

[SDKs.Ruby]

[SDKs.Ruby.Ruby]

[SDKs.Ruby.Ruby_LARGE]

[SDKs.Xamarin]

[SDKs.Xamarin.Xamarin]

[SDKs.Xamarin.Xamarin_LARGE]

[SDKs.iOS]

[SDKs.iOS.iOS]

[SDKs.iOS.iOS_LARGE]

[SecurityIdentityCompliance]
color: ${AWSPUML.colors:green}
entity_type: node

[SecurityIdentityCompliance.AWSArtifact]

[SecurityIdentityCompliance.AWSArtifact.AWSArtifact]

[SecurityIdentityCompliance.AWSArtifact.AWSArtifact_LARGE]

[SecurityIdentityCompliance.AWSCertificateManager]

[SecurityIdentityCompliance.AWSCertificateManager.AWSCertificateManager]

[SecurityIdentityCompliance.AWSCertificateManager.AWSCertificateManager_LARGE]

[SecurityIdentityCompliance.AWSCertificateManager.certificatemanager]
entity_type: component

[SecurityIdentityCompliance.AWSCertificateManager.certificatemanager.certificatemanager]

[SecurityIdentityCompliance.AWSCertificateManager.certificatemanager.certificatemanager_LARGE]

[SecurityIdentityCompliance.AWSCloudHSM]

[SecurityIdentityCompliance.AWSCloudHSM.AWSCloudHSM]

[SecurityIdentityCompliance.AWSCloudHSM.AWSCloudHSM_LARGE]

[SecurityIdentityCompliance.AWSDirectoryService]

[SecurityIdentityCompliance.AWSDirectoryService.AWSDirectoryService_LARGE]

[SecurityIdentityCompliance.AWSKMS]

[SecurityIdentityCompliance.AWSKMS.AWSKMS]

[SecurityIdentityCompliance.AWSKMS.AWSKMS_LARGE]

[SecurityIdentityCompliance.AWSOrganizations]

[SecurityIdentityCompliance.AWSOrganizations.AWSOrganizations]

[SecurityIdentityCompliance.AWSOrganizations.AWSOrganizations_LARGE]

[SecurityIdentityCompliance.AWSShield]

[SecurityIdentityCompliance.AWSShield.AWSShield]

[SecurityIdentityCompliance.AWSShield.AWSShield_LARGE]

[SecurityIdentityCompliance.AWSWAF]

[SecurityIdentityCompliance.AWSWAF.AWSWAF]

[SecurityIdentityCompliance.AWSWAF.AWSWAF_LARGE]

[SecurityIdentityCompliance.AWSWAF.filteringrule]
entity_type: artifact

[SecurityIdentityCompliance.AWSWAF.filteringrule.filteringrule]

[SecurityIdentityCompliance.AWSWAF.filteringrule.filteringrule_LARGE]

[SecurityIdentityCompliance.AmazonInspector]

[SecurityIdentityCompliance.AmazonInspector.AmazonInspector]

[SecurityIdentityCompliance.AmazonInspector.AmazonInspector_LARGE]

[SecurityIdentityCompliance.AmazonInspector.agent]
entity_type: agent

[SecurityIdentityCompliance.AmazonInspector.agent.agent]

[SecurityIdentityCompliance.AmazonInspector.agent.agent_LARGE]

[SecurityIdentityCompliance.IAM]
entity_type: artifact
skinparam: BackgroundColor White

[SecurityIdentityCompliance.IAM.AWSSTS]

[SecurityIdentityCompliance.IAM.AWSSTS.AWSSTS]

[SecurityIdentityCompliance.IAM.AWSSTS.AWSSTS_LARGE]

[SecurityIdentityCompliance.IAM.AWSSTS_2]

[SecurityIdentityCompliance.IAM.AWSSTS_2.AWSSTS_2]

[SecurityIdentityCompliance.IAM.AWSSTS_2.AWSSTS_2_LARGE]

[SecurityIdentityCompliance.IAM.IAM]
entity_type: frame
skinparam: BackgroundColor ${AWSPUML.colors:light-green}

[SecurityIdentityCompliance.IAM.IAM_LARGE]
entity_type: frame
skinparam: BackgroundColor ${AWSPUML.colors:light-green}

[SecurityIdentityCompliance.IAM.MFAtoken]
color: Black
skinparam: BackgroundColor ${AWSPUML.colors:light-grey}

[SecurityIdentityCompliance.IAM.MFAtoken.MFAtoken]

[SecurityIdentityCompliance.IAM.MFAtoken.MFAtoken_LARGE]

[SecurityIdentityCompliance.IAM.addon]

[SecurityIdentityCompliance.IAM.addon.addon]

[SecurityIdentityCompliance.IAM.addon.addon_LARGE]

[SecurityIdentityCompliance.IAM.dataencryptionkey]
color: Black
skinparam: BackgroundColor ${AWSPUML.colors:light-grey}

[SecurityIdentityCompliance.IAM.dataencryptionkey.dataencryptionkey]

[SecurityIdentityCompliance.IAM.dataencryptionkey.dataencryptionkey_LARGE]

[SecurityIdentityCompliance.IAM.encrypteddata]
color: Black
skinparam: BackgroundColor ${AWSPUML.colors:light-grey}

[SecurityIdentityCompliance.IAM.encrypteddata.encrypteddata]

[SecurityIdentityCompliance.IAM.encrypteddata.encrypteddata_LARGE]

[SecurityIdentityCompliance.IAM.long_termsecuritycredential]

[SecurityIdentityCompliance.IAM.long_termsecuritycredential.long_termsecuritycredential]

[SecurityIdentityCompliance.IAM.long_termsecuritycredential.long_termsecuritycredential_LARGE]

[SecurityIdentityCompliance.IAM.permissions]

[SecurityIdentityCompliance.IAM.permissions.permissions]

[SecurityIdentityCompliance.IAM.permissions.permissions_LARGE]

[SecurityIdentityCompliance.IAM.role]
entity_type: agent
skinparam: BackgroundColor White
           BorderColor ${AWSPUML.colors:green}

[SecurityIdentityCompliance.IAM.role.role]

[SecurityIdentityCompliance.IAM.role.role_LARGE]

[SecurityIdentityCompliance.IAM.temporarysecuritycredential]

[SecurityIdentityCompliance.IAM.temporarysecuritycredential.temporarysecuritycredential]

[SecurityIdentityCompliance.IAM.temporarysecuritycredential.temporarysecuritycredential_LARGE]

[Storage]
color: ${AWSPUML.colors:red}
entity_type: storage

[Storage.AWSSnowball]

[Storage.AWSSnowball.AWSSnowball]

[Storage.AWSSnowball.AWSSnowball_LARGE]

[Storage.AWSSnowball.importexport]
entity_type: component

[Storage.AWSSnowball.importexport.importexport]

[Storage.AWSSnowball.importexport.importexport_LARGE]

[Storage.AWSStorageGateway]
entity_type: artifact

[Storage.AWSStorageGateway.AWSStorageGateway]
entity_type: node

[Storage.AWSStorageGateway.AWSStorageGateway_LARGE]
entity_type: node

[Storage.AWSStorageGateway.cachedvolume]

[Storage.AWSStorageGateway.cachedvolume.cachedvolume]

[Storage.AWSStorageGateway.cachedvolume.cachedvolume_LARGE]

[Storage.AWSStorageGateway.non_cachedvolume]

[Storage.AWSStorageGateway.non_cachedvolume.non_cachedvolume]

[Storage.AWSStorageGateway.non_cachedvolume.non_cachedvolume_LARGE]

[Storage.AWSStorageGateway.virtualtapelibrary]

[Storage.AWSStorageGateway.virtualtapelibrary.virtualtapelibrary]

[Storage.AWSStorageGateway.virtualtapelibrary.virtualtapelibrary_LARGE]

[Storage.AmazonEBS]

[Storage.AmazonEBS.AmazonEBS]

[Storage.AmazonEBS.AmazonEBS_LARGE]

[Storage.AmazonEFS]

[Storage.AmazonEFS.AmazonEFS]

[Storage.AmazonEFS.AmazonEFS_LARGE]

[Storage.AmazonEFS.EFSShare]
entity_type: folder

[Storage.AmazonEFS.EFSShare.EFSShare]

[Storage.AmazonEFS.EFSShare.EFSShare_LARGE]

[Storage.AmazonGlacier]

[Storage.AmazonGlacier.AmazonGlacier]

[Storage.AmazonGlacier.AmazonGlacier_LARGE]

[Storage.AmazonGlacier.archive]
entity_type: artifact

[Storage.AmazonGlacier.archive.archive]

[Storage.AmazonGlacier.archive.archive_LARGE]

[Storage.AmazonGlacier.vault]

[Storage.AmazonGlacier.vault.vault]

[Storage.AmazonGlacier.vault.vault_LARGE]

[Storage.AmazonS3]
entity_type: storage
skinparam: BackgroundColor White

[Storage.AmazonS3.AmazonS3]

[Storage.AmazonS3.AmazonS3_LARGE]

[Storage.AmazonS3.bucket]
entity_type: folder

[Storage.AmazonS3.bucket.bucket]

[Storage.AmazonS3.bucket.bucket_LARGE]

[Storage.AmazonS3.bucketwithobjects]
entity_type: folder

[Storage.AmazonS3.bucketwithobjects.bucketwithobjects]

[Storage.AmazonS3.bucketwithobjects.bucketwithobjects_LARGE]

[Storage.AmazonS3.object]
entity_type: artifact

[Storage.AmazonS3.object.object]

[Storage.AmazonS3.object.object_LARGE]

[Storage.snapshot]
entity_type: artifact

[Storage.snapshot.snapshot]

[Storage.snapshot.snapshot_LARGE]

[Storage.volume]
entity_type: artifact

[Storage.volume.volume]

[Storage.volume.volume_LARGE]

