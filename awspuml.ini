[AWSPUML]
debug: True
sprite.force_regen: False
sprite.size: 16
sprite.shift: 0
sprite.shift_ignore: 0

[AWSPUML.colors]
orange:             #F58536
light-orange:       #FEEDE2
goldenrod:          #D9A842
light-goldenrod:    #F7EDD8
blue:               #2F74B8
light-blue:         #AECCEA
green:              #769D3F
light-green:        #CBDFAF
purple:             #AD698C
light-purple:       #EDDEE6
grey:               #7E7D7D
light-grey:         #D6D6D6
red:                #E05344
light-red:          #F9DFDC

[AI]
color: ${AWSPUML.colors:blue}
entity_type: component
[AI.AmazonLex]
[AI.AmazonMachineLearning]
[AI.AmazonPolly]
[AI.AmazonRekognition]
[Analytics]
color: ${AWSPUML.colors:orange}
entity_type: node
[Analytics.AWSDataPipeline]
[Analytics.AmazonAthena]
[Analytics.AmazonCloudSearch]
[Analytics.AmazonCloudSearch.SDFmetadata]
entity_type: artifact
[Analytics.AmazonEMR]
entity_type: component
[Analytics.AmazonEMR.EMRengine]
[Analytics.AmazonEMR.EMRengineMapRM3]
[Analytics.AmazonEMR.EMRengineMapRM5]
[Analytics.AmazonEMR.EMRengineMapRM7]
[Analytics.AmazonEMR.cluster]
entity_type: cloud
skinparam: BackgroundColor ${AWSPUML.colors:light-orange}
           BorderColor ${AWSPUML.colors:orange}
[Analytics.AmazonEMR_HDFScluster]
entity_type: cloud
skinparam: BackgroundColor ${AWSPUML.colors:light-orange}
           BorderColor ${AWSPUML.colors:orange}
[Analytics.AmazonElasticsearchService]
[Analytics.AmazonKinesis]
entity_type: component
[Analytics.AmazonKinesis.AmazonKinesisAnalytics]
[Analytics.AmazonKinesis.AmazonKinesisFirehose]
[Analytics.AmazonKinesis.AmazonKinesisStreams]
[Analytics.AmazonKinesis.AmazonKinesis_enabledapp]
[Analytics.AmazonQuickSight]
[Analytics.AmazonRedshift]
[ApplicationServices]
color: ${AWSPUML.colors:goldenrod}
entity_type: component
[ApplicationServices.AWSStepFunction]
[ApplicationServices.AmazonAPIGateway]
[ApplicationServices.AmazonAppStream2_0]
[ApplicationServices.AmazonElasticTranscoder]
[BusinessProductivity]
color: ${AWSPUML.colors:orange}
entity_type: frame
[BusinessProductivity.AmazonWorkDocs]
[BusinessProductivity.AmazonWorkMail]
[Compute]
color: ${AWSPUML.colors:orange}
entity_type: node
[Compute.AWSBatch]
[Compute.AWSElasticBeanstalk]
[Compute.AWSElasticBeanstalk.application]
entity_type: component
[Compute.AWSElasticBeanstalk.deployment]
entity_type: frame
[Compute.AWSLambda]
skinparam: BackgroundColor White
           BorderColor Black
[Compute.AWSLambda.LambdaFunction]
[Compute.AmazonEC2]
entity_type: component
[Compute.AmazonEC2.AMI]
entity_type: artifact
[Compute.AmazonEC2.AutoScaling]
entity_type: frame
[Compute.AmazonEC2.DBoninstance]
[Compute.AmazonEC2.EC2ComputeContainer]
[Compute.AmazonEC2.EC2ComputeContainer_Alt1]
[Compute.AmazonEC2.EC2ComputeContainer_Alt2]
[Compute.AmazonEC2.ElasticIP]
entity_type: artifact
[Compute.AmazonEC2.Spotfleet]
entity_type: frame
[Compute.AmazonEC2.Spotinstance]
[Compute.AmazonEC2.X1EC2Instance]
[Compute.AmazonEC2.instance]
[Compute.AmazonEC2.instances]
entity_type: frame
[Compute.AmazonEC2.instancewithCloudWatch]
[Compute.AmazonEC2.optimizedinstance]
[Compute.AmazonECR]
entity_type: frame
[Compute.AmazonECR.ECRRegistry]
[Compute.AmazonECS]
[Compute.AmazonLightsail]
[Compute.AmazonVPC]
[Compute.AmazonVPC.Internetgateway]
[Compute.AmazonVPC.VPCNATgateway]
[Compute.AmazonVPC.VPCpeering]
[Compute.AmazonVPC.VPNconnection]
[Compute.AmazonVPC.VPNgateway]
[Compute.AmazonVPC.customergateway]
[Compute.AmazonVPC.elasticnetworkadapter]
[Compute.AmazonVPC.elasticnetworkinterface]
[Compute.AmazonVPC.endpoints]
[Compute.AmazonVPC.flowlogs]
[Compute.AmazonVPC.router]
[Compute.ElasticLoadBalancing]
[Compute.ElasticLoadBalancing.ApplicationLoadBalancing]
[Compute.ElasticLoadBalancing.ELLoadBalancer]
[Database]
color: ${AWSPUML.colors:blue}
entity_type: database
[Database.AWSDatabaseMigrationService]
entity_type: node
[Database.AWSDatabaseMigrationService.databasemigrationworkflowjob]
[Database.AmazonDynamoDB]
skinparam: BackgroundColor White
[Database.AmazonDynamoDB.]
entity_type: artifact
[Database.AmazonDynamoDB.attribute]
[Database.AmazonDynamoDB.attributes]
[Database.AmazonDynamoDB.globalsecondaryindex]
[Database.AmazonDynamoDB.item]
[Database.AmazonDynamoDB.items]
[Database.AmazonDynamoDB.table]
entity_type: folder
skinparam: BackgroundColor ${AWSPUML.colors:light-blue}
[Database.AmazonElasticCache]
entity_type: storage
[Database.AmazonElasticCache.Memcached]
[Database.AmazonElasticCache.Redis]
[Database.AmazonElasticCache.cachenode]
[Database.AmazonRDS]
[Database.AmazonRDS.]
entity_type: component
[Database.AmazonRDS.DBinstance]
[Database.AmazonRDS.MSSQLinstance]
[Database.AmazonRDS.MSSQLinstancealternate]
[Database.AmazonRDS.MySQLDBinstance]
[Database.AmazonRDS.MySQLinstancealternate]
[Database.AmazonRDS.OracleDBinstancealternate]
[Database.AmazonRDS.PIOP]
[Database.AmazonRDS.PostgreSQLinstance]
[Database.AmazonRDS.SQLmaster]
[Database.AmazonRDS.SQLslave]
[Database.AmazonRDS.instancereadreplica]
[Database.AmazonRDS.instancestandby]
[Database.AmazonRDS.oracleDBinstance]
[Database.AmazonRedshift]
[Database.AmazonRedshift.]
entity_type: node
[Database.AmazonRedshift.densecomputenode]
[Database.AmazonRedshift.densestoragenode]
[DesktopAppStreaming]
color: ${AWSPUML.colors:orange}
entity_type: component
[DesktopAppStreaming.AmazonAppStream2_0]
color: ${AWSPUML.colors:goldenrod}
entity_type: node
[DesktopAppStreaming.AmazonWorkSpaces]
[DeveloperTools]
color: ${AWSPUML.colors:green}
entity_type: component
[DeveloperTools.AWSCodeBuild]
[DeveloperTools.AWSCodeCommit]
[DeveloperTools.AWSCodeDeploy]
[DeveloperTools.AWSCodePipeline]
[DeveloperTools.AWSX_Ray]
[GameDevelopment]
color: ${AWSPUML.colors:purple}
entity_type: node
[GameDevelopment.AmazonGameLift]
[General]
color: ${AWSPUML.colors:grey}
[General.AWSManagementConsole]
color: ${AWSPUML.colors:orange}
entity_type: agent
[General.AWScloud]
color: ${AWSPUML.colors:orange}
entity_type: cloud
skinparam: BorderColor ${AWSPUML.colors:orange}
[General.Internet]
color: ${AWSPUML.colors:light-grey}
entity_type: cloud
skinparam: BorderColor ${AWSPUML.colors:grey}
[General.Internetalternate1]
color: ${AWSPUML.colors:light-grey}
entity_type: cloud
skinparam: BorderColor ${AWSPUML.colors:grey}
[General.Internetalternate2]
color: ${AWSPUML.colors:light-grey}
entity_type: cloud
skinparam: BorderColor ${AWSPUML.colors:grey}
[General.SAMLtoken]
entity_type: artifact
[General.SSLpadlock]
entity_type: frame
[General.client]
color: ${AWSPUML.colors:grey}
entity_type: agent
[General.corporatedatacenter]
entity_type: storage
[General.disk]
entity_type: artifact
[General.forums]
color: ${AWSPUML.colors:orange}
entity_type: artifact
[General.genericdatabase]
entity_type: database
[General.mobileclient]
color: ${AWSPUML.colors:grey}
entity_type: agent
[General.multimedia]
color: ${AWSPUML.colors:light-grey}
entity_type: artifact
[General.officebuilding]
entity_type: node
[General.tapestorage]
entity_type: storage
[General.traditionalserver]
entity_type: node
[General.user]
color: ${AWSPUML.colors:light-grey}
entity_type: agent
skinparam: BorderColor transparent
[General.users]
color: ${AWSPUML.colors:light-grey}
entity_type: agent
skinparam: BorderColor transparent
[General.virtualprivatecloud]
color: ${AWSPUML.colors:orange}
entity_type: cloud
skinparam: BorderColor ${AWSPUML.colors:orange}
[InternetOfThings]
color: ${AWSPUML.colors:blue}
entity_type: node
[InternetOfThings.AVSenableddevice]
entity_type: component
[InternetOfThings.AWSGreengrass]
[InternetOfThings.AWSIoT]
[InternetOfThings.AWSIoT.HTTP2protocol]
entity_type: interface
skinparam: BackgroundColor ${AWSPUML.colors:light-blue}
           BorderColor ${AWSPUML.colors:blue}
[InternetOfThings.AWSIoT.HTTPprotocol]
entity_type: interface
skinparam: BackgroundColor ${AWSPUML.colors:light-blue}
           BorderColor ${AWSPUML.colors:blue}
[InternetOfThings.AWSIoT.MQTTprotocol]
entity_type: interface
skinparam: BackgroundColor ${AWSPUML.colors:light-blue}
           BorderColor ${AWSPUML.colors:blue}
[InternetOfThings.AWSIoT.action]
entity_type: usecase
skinparam: BackgroundColor ${AWSPUML.colors:light-blue}
           BorderColor ${AWSPUML.colors:blue}
[InternetOfThings.AWSIoT.actuator]
[InternetOfThings.AWSIoT.certificate]
entity_type: artifact
[InternetOfThings.AWSIoT.desiredstate]
entity_type: artifact
[InternetOfThings.AWSIoT.hardwareboard]
[InternetOfThings.AWSIoT.policy]
entity_type: artifact
[InternetOfThings.AWSIoT.reportedstate]
entity_type: artifact
[InternetOfThings.AWSIoT.rule]
[InternetOfThings.AWSIoT.sensor]
[InternetOfThings.AWSIoT.servo]
[InternetOfThings.AWSIoT.shadow]
[InternetOfThings.AWSIoT.simulator]
[InternetOfThings.AWSIoT.thingbank]
[InternetOfThings.AWSIoT.thingbicycle]
[InternetOfThings.AWSIoT.thingcamera]
[InternetOfThings.AWSIoT.thingcar]
[InternetOfThings.AWSIoT.thingcart]
[InternetOfThings.AWSIoT.thingcoffeepot]
[InternetOfThings.AWSIoT.thingdoorlock]
[InternetOfThings.AWSIoT.thingfactory]
[InternetOfThings.AWSIoT.thinggeneric]
[InternetOfThings.AWSIoT.thinghouse]
[InternetOfThings.AWSIoT.thinglightbulb]
[InternetOfThings.AWSIoT.thingmedicalemergency]
[InternetOfThings.AWSIoT.thingpoliceemergency]
[InternetOfThings.AWSIoT.thingthermostat]
[InternetOfThings.AWSIoT.thingtravel]
[InternetOfThings.AWSIoT.thingutility]
[InternetOfThings.AWSIoT.thingwindfarm]
[InternetOfThings.AWSIoT.topic]
entity_type: artifact
[InternetOfThings.alexaskill]
entity_type: component
[InternetOfThings.alexasmarthomeskill]
[InternetOfThings.alexavoiceservice]
entity_type: node
[InternetOfThings.echo]
[InternetOfThings.fireTV]
[InternetOfThings.fireTVstick]
[InternetOfThings.lambdafunction]
[ManagementTools]
color: ${AWSPUML.colors:green}
entity_type: node
[ManagementTools.AWSApplicationDiscoveryService]
[ManagementTools.AWSCloudFormation]
[ManagementTools.AWSCloudFormation.]
entity_type: artifact
[ManagementTools.AWSCloudFormation.changeset]
[ManagementTools.AWSCloudFormation.stack]
[ManagementTools.AWSCloudFormation.template]
[ManagementTools.AWSCloudTrail]
[ManagementTools.AWSConfig]
[ManagementTools.AWSManagedServices]
[ManagementTools.AWSOpsWorks]
[ManagementTools.AWSOpsWorks.]
entity_type: artifact
[ManagementTools.AWSOpsWorks.apps]
[ManagementTools.AWSOpsWorks.deployments]
[ManagementTools.AWSOpsWorks.instances]
[ManagementTools.AWSOpsWorks.layers]
[ManagementTools.AWSOpsWorks.monitoring]
[ManagementTools.AWSOpsWorks.permissions]
[ManagementTools.AWSOpsWorks.resources]
[ManagementTools.AWSOpsWorks.stack]
[ManagementTools.AWSOrganizations]
[ManagementTools.AWSServiceCatalog]
[ManagementTools.AWSTrustedAdvisor]
[ManagementTools.AWSTrustedAdvisor.]
entity_type: artifact
[ManagementTools.AWSTrustedAdvisor.checklist]
[ManagementTools.AWSTrustedAdvisor.checklistcost]
[ManagementTools.AWSTrustedAdvisor.checklistfaulttolerance]
[ManagementTools.AWSTrustedAdvisor.checklistperformance]
[ManagementTools.AWSTrustedAdvisor.checklistsecurity]
[ManagementTools.AmazonCloudWatch]
[ManagementTools.AmazonCloudWatch.alarm]
entity_type: artifact
[ManagementTools.AmazonCloudWatch.configrule]
[ManagementTools.AmazonCloudWatch.eventeventbased]
[ManagementTools.AmazonCloudWatch.eventtimebased]
[Messaging]
color: ${AWSPUML.colors:goldenrod}
entity_type: node
[Messaging.AmazonPinpoint]
[Messaging.AmazonSES]
[Messaging.AmazonSES.]
entity_type: artifact
[Messaging.AmazonSES.email]
[Messaging.AmazonSNS]
[Messaging.AmazonSNS.]
entity_type: artifact
skinparam: BackgroundColor ${AWSPUML.colors:light-purple}
[Messaging.AmazonSNS.HTTPnotification]
[Messaging.AmazonSNS.emailnotification]
[Messaging.AmazonSNS.topic]
[Messaging.AmazonSQS]
[Messaging.AmazonSQS.]
entity_type: artifact
[Messaging.AmazonSQS.message]
[Messaging.AmazonSQS.queue]
[Messaging.AmazonSWF]
[Messaging.AmazonSWF.]
entity_type: agent
[Messaging.AmazonSWF.decider]
[Messaging.AmazonSWF.worker]
[Migration]
[Migration.AWSDatabaseMigrationService]
[Migration.AWSDatabaseMigrationService.databasemigrationworkflow_job]
[Migration.AWSMigrationHub]
[Migration.AWSServerMigrationService]
[Migration.AWSSnowball]
[Migration.AWSSnowball.importexport]
[MobileServices]
color: ${AWSPUML.colors:purple}
entity_type: node
[MobileServices.AWSDeviceFarm]
[MobileServices.AWSMobileHub]
[MobileServices.AmazonAPIGateway]
[MobileServices.AmazonCognito]
[MobileServices.AmazonMobileAnalytics]
[MobileServices.AmazonPinpoint]
[NetworkingContentDelivery]
color: ${AWSPUML.colors:orange}
entity_type: node
[NetworkingContentDelivery.AWSDirectConnect]
[NetworkingContentDelivery.AmazonCloudFront]
entity_type: node
[NetworkingContentDelivery.AmazonCloudFront.]
entity_type: entity
skinparam: BackgroundColor transparent
           BorderColor ${AWSPUML.colors:red}
[NetworkingContentDelivery.AmazonCloudFront.downloaddistribution]
[NetworkingContentDelivery.AmazonCloudFront.edgelocation]
[NetworkingContentDelivery.AmazonCloudFront.streamingdistribution]
[NetworkingContentDelivery.AmazonRoute53]
[NetworkingContentDelivery.AmazonRoute53.hostedzone]
entity_type: frame
[NetworkingContentDelivery.AmazonRoute53.routetable]
entity_type: artifact
[NetworkingContentDelivery.AmazonVPC]
[NetworkingContentDelivery.AmazonVPC.]
entity_type: interface
skinparam: BackgroundColor ${AWSPUML.colors:light-orange}
           BorderColor ${AWSPUML.colors:orange}
[NetworkingContentDelivery.AmazonVPC.VPCNATgateway]
[NetworkingContentDelivery.AmazonVPC.VPCpeering]
[NetworkingContentDelivery.AmazonVPC.VPNconnection]
[NetworkingContentDelivery.AmazonVPC.VPNgateway]
[NetworkingContentDelivery.AmazonVPC.customergateway]
[NetworkingContentDelivery.AmazonVPC.elasticnetworkadapter]
[NetworkingContentDelivery.AmazonVPC.elasticnetworkinterface]
[NetworkingContentDelivery.AmazonVPC.endpoints]
[NetworkingContentDelivery.AmazonVPC.flowlogs]
entity_type: artifact
skinparam: BackgroundColor White
           BorderColor Black
[NetworkingContentDelivery.AmazonVPC.internetgateway]
[NetworkingContentDelivery.AmazonVPC.router]
[NetworkingContentDelivery.ElasticLoadBalancing]
[NetworkingContentDelivery.ElasticLoadBalancing.ApplicationLoadBalancing]
[NetworkingContentDelivery.ElasticLoadBalancing.ELLoadBalancer]
[OnDemandWorkforce]
color: ${AWSPUML.colors:grey}
entity_type: node
[OnDemandWorkforce.]
color: ${AWSPUML.colors:light-grey}
entity_type: artifact
[OnDemandWorkforce.AmazonMechanicalTurk]
[OnDemandWorkforce.AmazonMechanicalTurk.assignmenttask]
[OnDemandWorkforce.AmazonMechanicalTurk.humanintelligencetasks]
[OnDemandWorkforce.AmazonMechanicalTurk.requester]
[OnDemandWorkforce.AmazonMechanicalTurk.workers]
[SDKs]
entity_type: agent
[SDKs.AWSCLI]
[SDKs.AWSToolkitForEclipse]
[SDKs.AWSToolkitForVisualStudio]
[SDKs.AWSToolsForWindowsPowerShell]
[SDKs.Android]
[SDKs.Java]
[SDKs.JavaScript]
[SDKs.Net]
[SDKs.Nodejs]
[SDKs.PHP]
[SDKs.Python]
[SDKs.Ruby]
[SDKs.Xamarin]
[SDKs.iOS]
[SecurityIdentityCompliance]
color: ${AWSPUML.colors:green}
entity_type: node
[SecurityIdentityCompliance.ACM]
[SecurityIdentityCompliance.ACM.certificatemanager]
entity_type: component
[SecurityIdentityCompliance.AWSArtifact]
[SecurityIdentityCompliance.AWSCloudHSM]
[SecurityIdentityCompliance.AWSDirectoryService]
[SecurityIdentityCompliance.AWSIAM]
entity_type: frame
skinparam: BackgroundColor ${AWSPUML.colors:light-green}
[SecurityIdentityCompliance.AWSIAM.]
entity_type: artifact
skinparam: BackgroundColor White
[SecurityIdentityCompliance.AWSIAM.AWSSTS]
[SecurityIdentityCompliance.AWSIAM.AWSSTS_2]
[SecurityIdentityCompliance.AWSIAM.MFAtoken]
color: Black
skinparam: BackgroundColor ${AWSPUML.colors:light-grey}
[SecurityIdentityCompliance.AWSIAM.addon]
[SecurityIdentityCompliance.AWSIAM.dataencryptionkey]
color: Black
skinparam: BackgroundColor ${AWSPUML.colors:light-grey}
[SecurityIdentityCompliance.AWSIAM.encrypteddata]
color: Black
skinparam: BackgroundColor ${AWSPUML.colors:light-grey}
[SecurityIdentityCompliance.AWSIAM.long_termsecuritycredential]
[SecurityIdentityCompliance.AWSIAM.permissions]
[SecurityIdentityCompliance.AWSIAM.role]
entity_type: agent
skinparam: BackgroundColor White
           BorderColor ${AWSPUML.colors:green}
[SecurityIdentityCompliance.AWSIAM.temporarysecuritycredential]
[SecurityIdentityCompliance.AWSKMS]
[SecurityIdentityCompliance.AWSShield]
[SecurityIdentityCompliance.AWSWAF]
[SecurityIdentityCompliance.AWSWAF.filteringrule]
[SecurityIdentityCompliance.AmazonInspector]
[SecurityIdentityCompliance.AmazonInspector.agent]
[Storage]
color: ${AWSPUML.colors:red}
entity_type: storage
[Storage.AWSSnowball]
[Storage.AWSSnowball.importexport]
entity_type: component
[Storage.AWSStorageGateway]
entity_type: node
[Storage.AWSStorageGateway.]
entity_type: artifact
[Storage.AWSStorageGateway.cachedvolume]
[Storage.AWSStorageGateway.non_cachedvolume]
[Storage.AWSStorageGateway.virtualtapelibrary]
[Storage.AmazonEBS]
[Storage.AmazonEFS]
[Storage.AmazonEFS.EFSShare]
[Storage.AmazonGlacier]
[Storage.AmazonGlacier.]
entity_type: artifact
[Storage.AmazonGlacier.archive]
[Storage.AmazonGlacier.vault]
[Storage.AmazonS3]
entity_type: storage
skinparam: BackgroundColor White
[Storage.AmazonS3.bucket]
entity_type: folder
[Storage.AmazonS3.bucketwithobjects]
entity_type: folder
[Storage.AmazonS3.object]
entity_type: artifact
[Storage.snapshot]
entity_type: artifact
[Storage.volume]
entity_type: artifact
